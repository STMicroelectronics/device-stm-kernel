From 74fcd58496333da385a8f028a248d6fa0a6011d1 Mon Sep 17 00:00:00 2001
From: frq09432 <nicolas.louboutin@st.com>
Date: Mon, 9 Dec 2019 15:01:16 +0100
Subject: [PATCH 38/38] Add trace event associated to fs open syscall (atrace)

---
 fs/open.c | 20 ++++++++++++++++++++
 1 file changed, 20 insertions(+)

diff --git a/fs/open.c b/fs/open.c
index 886da56..74e91f3 100644
--- a/fs/open.c
+++ b/fs/open.c
@@ -1082,6 +1082,25 @@ struct file *file_open_root(struct dentry *dentry, struct vfsmount *mnt,
 }
 EXPORT_SYMBOL(file_open_root);
 
+static void _trace_do_sys_open(struct file *filp, int flags, int mode, long fd)
+{
+	char *buf;
+	char *fname;
+
+	buf = kzalloc(PAGE_SIZE, GFP_KERNEL);
+	if (!buf)
+		return;
+	fname = d_path(&filp->f_path, buf, PAGE_SIZE);
+
+	if (IS_ERR(fname))
+		goto out;
+
+	trace_printk("%s: open(\"%s\", %d, %d) fd = %ld, inode = %ld\n",
+		current->comm, fname, flags, mode, fd, filp->f_inode->i_ino);
+out:
+	kfree(buf);
+}
+
 long do_sys_open(int dfd, const char __user *filename, int flags, umode_t mode)
 {
 	struct open_flags op;
@@ -1104,6 +1123,7 @@ long do_sys_open(int dfd, const char __user *filename, int flags, umode_t mode)
 		} else {
 			fsnotify_open(f);
 			fd_install(fd, f);
+			_trace_do_sys_open(f, flags, mode, fd);
 		}
 	}
 	putname(tmp);
-- 
2.7.4

